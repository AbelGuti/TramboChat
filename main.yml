Description:
  Main Template

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: General configuration
      Parameters:
        - Environment
        - BucketName
    - Label:
        default: Network configuration
      Parameters:
        - VpcCIDR
        - Certificate
        - HostedZoneName
        - HostedZoneId
    - Label:
        default: ECS configuration
      Parameters:
        - InstanceTypeElasticCache
        - InstanceTypeECS
        - KeyName
  Stack:
    Value: 0
  VersionDate:
    Value: 20160518
  Identifier:
    Value: main
  Input:
    Description: Input of all required parameters in nested stacks
  Output:
    Description: N/A

Parameters:
  BucketName:
    Type: String
    Description: Bucket where the templates are stored.
    AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-.]*[0-9a-zA-Z])*$
    ConstraintDescription: Quick Start bucket name can include numbers, lowercase
      letters, uppercase letters, periods (.), and hyphens (-). It cannot start or
      end with a hyphen (-).
    Default: "trambo-demo"
  KeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Default: eu-west-1
    Description: AWS Keypair for instances SSH.
  VpcCIDR:
    AllowedPattern: '((\d{1,3})\.){3}\d{1,3}/\d{1,2}'
    Default: 10.40.0.0/16
    Description: VPC CIDR Block (eg 10.0.0.0/16)
    Type: String
  InstanceTypeElasticCache:
    Type: String
    Default: cache.t2.medium
    Description: RDS instance size.
    AllowedValues:
      - cache.t2.micro
      - cache.t2.medium
      - cache.m4.large
      - cache.m4.xlarge
      - cache.r4.large
      - cache.r4.xlarge
  InstanceTypeECS:
    Type: String
    Default: t2.large
    AllowedValues:
      - t2.micro
      - t2.medium
      - t2.large
      - m4.large
      - m4.xlarge
      - c4.large
      - c4.xlarge
  Environment:
    Type: String
    Description: Environment Name - This is used like a suffix for many resources.
  Certificate:
    Type: String
    Description: Certificate used in the ALB
    Default: arn:aws:acm:us-west-2:485837490462:certificate/90b0569c-5559-403c-949a-bfbe14401594
  HostedZoneName:
    Type: String
    Default: trambo.cloud
  HostedZoneId:
    Type: String
    Default: Z99S89EW1Z2PA

Resources:
  VPC:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://s3.amazonaws.com/${BucketName}/modules/vpc.yml
      TimeoutInMinutes: '60'
      Parameters:
        EnvironmentName: !Ref Environment
        VpcCIDR: !Ref VpcCIDR

  ECSCluster:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://s3.amazonaws.com/${BucketName}/modules/ecs_cluster.yml
      TimeoutInMinutes: '60'
      Parameters:
        Environment: !Ref Environment
        ClusterName: !Ref Environment
        DesiredCapacity: 1
        InstanceType: !Ref InstanceTypeECS
        KeyPair: !Ref KeyName
        MaxBatchSize: 1
        MaxSize: 5
        MinInstancesInService: 1
        MinSize: 1
        PauseTime: PT3M
        SubnetIds: !GetAtt VPC.Outputs.PrivateSubnets
        VpcId: !GetAtt VPC.Outputs.VPC

  ElasticCache:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://s3.amazonaws.com/${BucketName}/modules/elastic_cache.yml
      TimeoutInMinutes: '60'
      Parameters:
        Environment: !Ref Environment
        AutoMinorVersionUpgrade: true
        ClusterName: !Ref Environment
        Engine: "redis"
        NodeCount: 1
        NodeType: !Ref InstanceTypeElasticCache
        SubnetIds: !GetAtt VPC.Outputs.PrivateSubnets
        VpcCidr: !GetAtt VPC.Outputs.VpcCIDR
        VpcId: !GetAtt VPC.Outputs.VPC
        Encrypted: false

  LoadBalancer:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://s3.amazonaws.com/${BucketName}/modules/alb.yml
      TimeoutInMinutes: '60'
      Parameters:
        Environment: !Ref Environment
        PublicSubnetIds: !GetAtt VPC.Outputs.PublicSubnets
        VpcId: !GetAtt VPC.Outputs.VPC
        Certificate: !Ref Certificate
        HostedZoneName: !Ref HostedZoneName

  Route53:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://s3.amazonaws.com/${BucketName}/modules/route53.yml
      TimeoutInMinutes: '60'
      Parameters:
        Name: !Sub chat.${HostedZoneName}
        HostedZoneId: !Ref HostedZoneId
        DNSName: !GetAtt LoadBalancer.Outputs.LoadBalancerUrl
        AliasHostedZoneId: !GetAtt LoadBalancer.Outputs.LoadBalancerZone

  ChatService:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://s3.amazonaws.com/${BucketName}/modules/service.yml
      TimeoutInMinutes: '60'
      Parameters:
        Cluster: !GetAtt ECSCluster.Outputs.EcsCluster
        BucketName: !Ref BucketName
        ContainerPort: 3000
        LoadBalancerArn: !GetAtt LoadBalancer.Outputs.LoadBalancerArn
        ListenerArn: !GetAtt LoadBalancer.Outputs.ListenerArn
        HttpsListenerArn: !GetAtt LoadBalancer.Outputs.ListenerArn
        HttpsListenerArn: !GetAtt LoadBalancer.Outputs.HttpsListenerArn
        VpcId: !GetAtt VPC.Outputs.VPC
        Environment: !Ref Environment
        SubnetIds: !GetAtt VPC.Outputs.PrivateSubnets
        ServiceName: chat
        ECSSG: !GetAtt ECSCluster.Outputs.SecurityGroup
        TargetGroupName: !Sub chat-${Environment}
        HostHeader: !Sub chat.${HostedZoneName}
        Priority: 30
        HealthCheckPath: /
